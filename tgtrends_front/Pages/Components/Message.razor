@using tgtrends_front.Data
@using tgtrends_front.Services

@inject IJSRuntime JsRuntime
@inject TelegramService TelegramService

<div class="message">
    <div class="message__image">
        <img src="@(MessageData.ImgUrl ?? ChannelData.ImgUrl)" class="image image__background"/>
        <img src="@MessageData.ImgUrl" class="image image--contain"/>
        <div class="image image__shadow"></div>
        <div class="image image__text-opened @(!_textIsOpened ? "is-hidden" : "")"></div>
    </div>
    <div class="message__info @(TelegramService.IsMobile ? "message__info--mobile-padding" : "")">
        <div class="message__info-text">
            <div class="text-scroll @(_textIsOpened ? "text-scroll--height" : "")" @onclick="OnMessageTextClicked">
                <svg class="@(_textIsOpened ? "svg--rotate" : "") @(!_textResizable ? "is-hidden" : "")" width="24" height="14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.00572 0.199708C8.25804 0.199708 8.51037 0.281371 8.68242 0.454823L15.7247 6.76094C15.8967 6.914 16 7.11808 16 7.35277C16 7.83236 15.5985 8.19971 15.0594 8.19971C14.8071 8.19971 14.5548 8.09767 14.3827 7.95481L7.46665 1.78137H8.53331L1.6172 7.95481C1.44516 8.09767 1.21576 8.19971 0.951968 8.19971C0.412902 8.19971 0 7.83236 0 7.35277C0 7.11808 0.103226 6.914 0.275269 6.76094L7.32901 0.454823C7.51253 0.281371 7.74192 0.199708 8.00572 0.199708Z" fill="white" fill-opacity="0.85" />
                </svg>
                <p @ref="_textElement">@MessageData.Text</p>
            </div>
            <div class="message__info-statistics">
                <button class="button">
                    <svg width="20" height="18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14.44 0.100098C12.63 0.100098 11.01 0.980098 10 2.3301C8.99 0.980098 7.37 0.100098 5.56 0.100098C2.49 0.100098 0 2.6001 0 5.6901C0 6.8801 0.19 7.9801 0.52 9.0001C2.1 14.0001 6.97 16.9901 9.38 17.8101C9.72 17.9301 10.28 17.9301 10.62 17.8101C13.03 16.9901 17.9 14.0001 19.48 9.0001C19.81 7.9801 20 6.8801 20 5.6901C20 2.6001 17.51 0.100098 14.44 0.100098Z" fill="white" />
                    </svg>
                    <span>1.3K</span>
                </button>
                <button class="button">
                    <svg width="18" height="18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.1666 0.666504H4.83329C2.53329 0.666504 0.666626 2.52484 0.666626 4.8165V9.79984V10.6332C0.666626 12.9248 2.53329 14.7832 4.83329 14.7832H6.08329C6.30829 14.7832 6.60829 14.9332 6.74996 15.1165L7.99996 16.7748C8.54996 17.5082 9.44996 17.5082 9.99996 16.7748L11.25 15.1165C11.4083 14.9082 11.6583 14.7832 11.9166 14.7832H13.1666C15.4666 14.7832 17.3333 12.9248 17.3333 10.6332V4.8165C17.3333 2.52484 15.4666 0.666504 13.1666 0.666504ZM5.66663 8.99984C5.19996 8.99984 4.83329 8.62484 4.83329 8.1665C4.83329 7.70817 5.20829 7.33317 5.66663 7.33317C6.12496 7.33317 6.49996 7.70817 6.49996 8.1665C6.49996 8.62484 6.13329 8.99984 5.66663 8.99984ZM8.99996 8.99984C8.53329 8.99984 8.16663 8.62484 8.16663 8.1665C8.16663 7.70817 8.54163 7.33317 8.99996 7.33317C9.45829 7.33317 9.83329 7.70817 9.83329 8.1665C9.83329 8.62484 9.46663 8.99984 8.99996 8.99984ZM12.3333 8.99984C11.8666 8.99984 11.5 8.62484 11.5 8.1665C11.5 7.70817 11.875 7.33317 12.3333 7.33317C12.7916 7.33317 13.1666 7.70817 13.1666 8.1665C13.1666 8.62484 12.8 8.99984 12.3333 8.99984Z" fill="white" />
                    </svg>
                    <span>933</span>
                </button>
            </div>
        </div>
        <div class="message__info-channel channel">
            <div class="channel__info">
                <img src="@ChannelData.ImgUrl"/>
                <div class="channel__info-text">
                    <span class="channel-name">@ChannelData.Name</span>
                    <span class="channel-last-time">@ChannelData.LastPostDate</span>
                </div>
            </div>
            <button class="button button--blurred channel__goto-link" @onclick="GoToPostClick">
                <svg width="15" height="15" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.125 7.375L13.25 2.25" stroke="#CBCBCB" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M13.75 4.75V1.75H10.75" stroke="#CBCBCB" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M6.875 1.75H5.625C2.5 1.75 1.25 3 1.25 6.125V9.875C1.25 13 2.5 14.25 5.625 14.25H9.375C12.5 14.25 13.75 13 13.75 9.875V8.625" stroke="#CBCBCB" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <span>To post</span>
            </button>
        </div>
    </div>
</div>

@code
{
    [Parameter, EditorRequired] 
    public MessageData MessageData { get; set; } = new();

    private ChannelData ChannelData => MessageData.ChannelData;
    private bool _textIsOpened;
    private bool _textResizable;
    private ElementReference _textElement;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            int height = await JsRuntime.InvokeAsync<int>("getElementHeight", _textElement);
            _textResizable = (height > 100) && MessageData.ImgUrl != null;
            
            if (MessageData.ImgUrl == null)
                _textIsOpened = true;
            
            StateHasChanged();
        }
    }

    private void OnMessageTextClicked()
    {
        if (_textResizable)
        {
            _textIsOpened = !_textIsOpened;
            StateHasChanged();
        }
    }

    private async Task GoToPostClick()
    {
        await TelegramService.GoToPostLink(ChannelData.ID, MessageData.ID);
    }
}
